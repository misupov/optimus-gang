// <auto-generated />
using System;
using ClashOfClans.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClashOfClans.Migrations
{
    [DbContext(typeof(ClashContext))]
    [Migration("20181005201055_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("ClashOfClans.Models.ClanSnapshot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BadgeUrlLarge");

                    b.Property<string>("BadgeUrlMedium");

                    b.Property<string>("BadgeUrlSmall");

                    b.Property<int>("ClanLevel");

                    b.Property<int>("ClanPoints");

                    b.Property<int>("ClanVersusPoints");

                    b.Property<string>("Description");

                    b.Property<bool>("IsWarLogPublic");

                    b.Property<bool>("LocationIsCountry");

                    b.Property<string>("LocationName");

                    b.Property<int>("Members");

                    b.Property<string>("Name");

                    b.Property<int>("RequiredTrophies");

                    b.Property<DateTimeOffset>("SnapshotTime");

                    b.Property<string>("Tag");

                    b.Property<string>("Type");

                    b.Property<string>("WarFrequency");

                    b.Property<int>("WarLosses");

                    b.Property<int>("WarTies");

                    b.Property<int>("WarWinStreak");

                    b.Property<int>("WarWins");

                    b.HasKey("Id");

                    b.ToTable("ClanSnapshots");
                });

            modelBuilder.Entity("ClashOfClans.Models.PlayerSnapshot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AttackWins");

                    b.Property<int?>("BestTrophies");

                    b.Property<int?>("BestVersusTrophies");

                    b.Property<int?>("BuilderHallLevel");

                    b.Property<int>("ClanRank");

                    b.Property<int?>("ClanSnapshotId");

                    b.Property<int?>("DefenseWins");

                    b.Property<int>("Donations");

                    b.Property<int>("DonationsReceived");

                    b.Property<int>("ExpLevel");

                    b.Property<bool>("FullSnapshot");

                    b.Property<string>("LeagueLargeIcon");

                    b.Property<string>("LeagueMediumIcon");

                    b.Property<string>("LeagueName");

                    b.Property<string>("LeagueSmallIcon");

                    b.Property<string>("Name");

                    b.Property<int>("PreviousClanRank");

                    b.Property<string>("Role");

                    b.Property<DateTimeOffset>("SnapshotTime");

                    b.Property<string>("Tag");

                    b.Property<int?>("TownHallLevel");

                    b.Property<int>("Trophies");

                    b.Property<int?>("VersusBattleWins");

                    b.Property<int>("VersusTrophies");

                    b.Property<int?>("WarStars");

                    b.HasKey("Id");

                    b.HasIndex("ClanSnapshotId");

                    b.ToTable("PlayerSnapshots");
                });

            modelBuilder.Entity("ClashOfClans.Models.PlayerSnapshot", b =>
                {
                    b.HasOne("ClashOfClans.Models.ClanSnapshot")
                        .WithMany("MemberList")
                        .HasForeignKey("ClanSnapshotId");
                });
#pragma warning restore 612, 618
        }
    }
}
